name: create eks cluster

on:
  # push:
    # branches: [main]
  workflow_dispatch:

# env:
  # PATIENT_REPO: 012889719104.dkr.ecr.ap-south-1.amazonaws.com/patient-service
  # APPOINTMENT_REPO: 012889719104.dkr.ecr.ap-south-1.amazonaws.com/appointment-service

permissions:
  id-token: write
  contents: write

jobs:
  Create_ECS_Cluster:
    runs-on: ubuntu-latest

    # defaults:
    #   run:
    #     working-directory: usecase8

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.2.2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3

      - name: SetUp AWS
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.OIDC_ROLE }}

      # - name: Login to Amazon ECR
      #   uses: aws-actions/amazon-ecr-login@v2

      # # Patient Service build & push
      # - name: Build patient-service Docker image
      #   run: |
      #     docker build -t $PATIENT_REPO:latest ./application/patient-service
      #     docker push $PATIENT_REPO:latest

      # # Appointment Service build & push
      # - name: Build appointment-service Docker image
      #   run: |
      #     docker build -t $APPOINTMENT_REPO:latest ./application/appointment-service
      #     docker push $APPOINTMENT_REPO:latest

      # Terraform deploy
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init -reconfigure

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve
